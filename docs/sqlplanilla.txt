use gamporongoCons


drop proc llenarPlanillaRoberto
drop table phpTriggerPlanilla
drop table AFPPlanilla
drop table PlanillasRoberto


go
create table PlanillasRoberto(
Nro int not null primary key,
NombreCompleto varchar(255),
Ocupacion varchar(255),
CI varchar(255),
Expedido varchar(12),
Sexo varchar(12),
FechaIngreso date,
FechaSalida date,
HaberBasico varchar(255),
DiasTrabajados varchar(255),
SueldoBasico float,
BonoAntiguedad float,
OtrosIngresos float,
TotalGanado float,
AFP float,
NacSolidario float,
IVA float,
OtrosEgresos float,
TotalEgresos float,
LiquidoPagable float,
DiasTrabajadosBC int,
NroCta varchar(255),
SaldoCredFis float,
NivelSalarial float,
CPER INTEGER
);



go
create table AFPPlanilla(
id integer not null primary key identity(1,1),
glosa varchar(200) not null,
importe float not null,
nro_planilla_roberto integer not null,
	foreign key (nro_planilla_roberto) references PlanillasRoberto(Nro) on update cascade on delete cascade
);


--select * from rhtrn

GO
CREATE PROC llenarPlanillaRoberto @PRYC as Integer,@YEAR as Integer,@MONTH as Integer
AS
BEGIN

	SET NOCOUNT ON;

	DELETE FROM PlanillasRoberto
	DELETE FROM AFPPlanilla

	DECLARE @CPER INTEGER

	DECLARE @NombreCompleto varchar(255)
	DECLARE @Ocupacion varchar(255)
	DECLARE @CI varchar(255)
	DECLARE @Expedido varchar(12)
	DECLARE @Sexo varchar(12)
	DECLARE @FechaIngreso date
	DECLARE @FechaSalida date
	DECLARE @FechaRetiro date
	DECLARE @HaberBasico float
	DECLARE @DiasTrabajados int
	DECLARE @SueldoBasico float
	DECLARE @BonoAntiguedad float
	DECLARE @OtrosIngresos float
	DECLARE @TotalGanado float
	DECLARE @AFP float
	DECLARE @NacSolidario float
	DECLARE @IVA float
	DECLARE @OtrosEgresos float
	DECLARE @TotalEgresos float
	DECLARE @LiquidoPagable float
	DECLARE @DiasTrabajadosBC int
	DECLARE @NroCta varchar(255)
	DECLARE @SaldoCredFis float
	DECLARE @NivelSalarial float

	DECLARE PersonasCursor CURSOR FOR (SELECT gbperCPER,gbper.gbperNomb,rhcrg.rhcrgDesc,
	gbper.gbperDide,gbper.gbperExci,gbper.gbperSexo,rhemp.rhempFing,rhemp.rhempFfin,rhemp.rhempSldo,rhempNcta,rhemp.rhempFret,rhnvs.rhnvsSldo
    FROM gbper,rhemp,rhcrg,rhnvs
	WHERE gbper.gbperCPER=rhemp.rhempNemp AND rhcrg.rhcrgCcrg=rhemp.rhempCcrg
	AND rhemp.rhempPRYC=@PRYC
	AND rhemp.rhempStaE=1
	AND ( YEAR(rhemp.rhempFing)<@YEAR OR (YEAR(rhemp.rhempFing)=@YEAR AND MONTH(rhemp.rhempFing)<=@MONTH) ) 
	AND ( YEAR(rhemp.rhempFfin)>@YEAR OR (YEAR(rhemp.rhempFfin)=@YEAR AND MONTH(rhemp.rhempFfin)>=@MONTH ) OR (rhemp.rhempFfin='1900-01-01') )
	
	--SUELDO
	AND rhnvs.rhnvsCnvs=rhemp.rhempNsal
	)
	ORDER BY rhnvs.rhnvsSldo asc
	--ORDER BY gbperApep

	OPEN PersonasCursor

	DECLARE @Nro Integer
	SET @Nro=1

	FETCH NEXT FROM PersonasCursor INTO @CPER,@NombreCompleto,@Ocupacion,@CI,@Expedido,@Sexo,@FechaIngreso,@FechaSalida,@HaberBasico,@NroCta,@FechaRetiro,@NivelSalarial
	WHILE @@fetch_status = 0
	BEGIN
		

		--CALCULAR DIAS PAGADOS
		SET @DiasTrabajados=30
		IF (YEAR(@FechaIngreso)=@YEAR AND MONTH(@FechaIngreso)=@MONTH)
		BEGIN
			SET @DiasTrabajados=31-DAY(@FechaIngreso)
		END

		IF (YEAR(@FechaSalida)=@YEAR AND MONTH(@FechaSalida)=@MONTH)
		BEGIN
			SET @DiasTrabajados=DAY(@FechaSalida)
		END

		IF (YEAR(@FechaRetiro)=@YEAR AND MONTH(@FechaRetiro)=@MONTH)
		BEGIN
			SET @DiasTrabajados=DAY(@FechaRetiro)
		END

		IF (@DiasTrabajados>30) 
		BEGIN
			SET @DiasTrabajados=30
		END

		--CALCULAR SUELDO BASICO 
		SET @SueldoBasico =  @HaberBasico*(@DiasTrabajados/30.0)

		--CALCULAR BONO ANTIGUEDAD
		SET @BonoAntiguedad=(SELECT sum(rhtrn.rhtrnImpt) as valor
          from rhtrn
          where rhtrnNemp=@CPER and YEAR(rhtrn.rhtrnFtra)=@YEAR and MONTH(rhtrn.rhtrnFtra)=@Month
          and rhtrnGlos like '%antiguedad%' )

		IF @BonoAntiguedad is null
		BEGIN
			SET @BonoAntiguedad=0
		END

		-----------------------------------------------BORRAR LUEGO EXCEPCION PARA UNA PERSONA QUE NO SACA EN ACTIVE---------------------------------------
		IF @CPER=46
		BEGIN
			SET @BonoAntiguedad=585
		END
		-----------------------------------------------BORRAR LUEGO EXCEPCION PARA UNA PERSONA QUE NO SACA EN ACTIVE---------------------------------------

		--CALCULAR OTROS INGRESOS
		SET @OtrosIngresos=(SELECT sum(rhtrn.rhtrnImpt) as valor
          from rhtrn
          where rhtrnNemp=@CPER and YEAR(rhtrn.rhtrnFtra)=@YEAR and MONTH(rhtrn.rhtrnFtra)=@Month
          and rhtrnGlos like '%otros ingresos%' )
		IF @OtrosIngresos is null
		BEGIN
			SET @OtrosIngresos=0
		END

		--CALCULAR INGRESO TOTAL
		SET @TotalGanado=@SueldoBasico+@BonoAntiguedad+@OtrosIngresos

		--CALCULAR AFP
		SET @AFP=(SELECT sum(rhtrn.rhtrnImpt) as valor
          from rhtrn
          where rhtrnNemp=@CPER and YEAR(rhtrn.rhtrnFtra)=@YEAR and MONTH(rhtrn.rhtrnFtra)=@Month
          and (rhtrnGlos like '%afp%' OR rhtrnGlos like '%aporte solidario%') )
		IF @AFP is null
		BEGIN
			SET @AFP=0
		END

		--CALCULAR SOLIDARIO
		SET @NacSolidario=(SELECT sum(rhtrn.rhtrnImpt) as valor
          from rhtrn
          where rhtrnNemp=@CPER and YEAR(rhtrn.rhtrnFtra)=@YEAR and MONTH(rhtrn.rhtrnFtra)=@Month
          and (rhtrnGlos like '%Aporte Solidario Del Asegurado(0.08424908%' or rhtrnGlos like '%Aporte Nacional Solidario%') )
		IF @NacSolidario is null
		BEGIN
			SET @NacSolidario=0
		END

		--CALCULAR IVA
		SET @IVA=(SELECT sum(rhtrn.rhtrnImpt) as valor
          from rhtrn
          where rhtrnNemp=@CPER and YEAR(rhtrn.rhtrnFtra)=@YEAR and MONTH(rhtrn.rhtrnFtra)=@Month
          and rhtrnGlos like '%iva%' )
		IF @IVA is null
		BEGIN
			SET @IVA=0
		END

		--CALCULAR FALTAS Y ATRASOS

		--CALCULAR OTROS EGRESOS
		SET @OtrosEgresos=(SELECT sum(rhtrn.rhtrnImpt) as valor
          from rhtrn
          where rhtrnNemp=@CPER and YEAR(rhtrn.rhtrnFtra)=@YEAR and MONTH(rhtrn.rhtrnFtra)=@Month
          and (rhtrnGlos like '%otros egresos%' or rhtrnGlos like '%falta%'  or rhtrnGlos like '%descuento%') )

		IF @OtrosEgresos is null
		BEGIN
			SET @OtrosEgresos=0
		END

		------------CALCULO DE AFP EXTRA------------------
		DECLARE @NOMBREPROYECTO AS VARCHAR(255)
		SET @NOMBREPROYECTO=(SELECT cgpryTitl from cgpry where cgpry.cgpryCODE=3 and cgpryTitl like '%consultor%')

		IF (@NOMBREPROYECTO is null)
		BEGIN
			IF (@AFP+@NacSolidario=0)
			BEGIN
				SET @AFP=@SueldoBasico*0.1271
			END
		END


		-----------------------------------------------BORRAR LUEGO EXCEPCION PARA UNA PERSONA QUE NO SACA EN ACTIVE---------------------------------------
		IF @CPER=46
		BEGIN
			SET @AFP=@TotalGanado*0.1271
		END
		-----------------------------------------------BORRAR LUEGO EXCEPCION PARA UNA PERSONA QUE NO SACA EN ACTIVE---------------------------------------


		--CALCULAR TOTAL EGRESOS
		SET @TotalEgresos=@AFP+@NacSolidario+@IVA+@OtrosEgresos

		--CALCULAR LIQUIDO PAGABLE
		SET @LiquidoPagable=@TotalGanado-ABS(@TotalEgresos)

		--CALCULAR DIAS TRABAJADOS BIOCONTROL
		SET @DiasTrabajadosBC=(SELECT COUNT(distinct DAY(created_at)) FROM PorongoGAM_Asistencia.dbo.Fichada where codigo=@CI and MONTH(created_at)=@MONTH and YEAR(created_at)=@YEAR)
		
		--CALCULAR SALDO CREDITO FISCAL

		SET @SaldoCredFis=(select sum(rhivaImpt) from rhiva where rhivaNemp=@CPER and YEAR(rhivaFtra)<=@Year and MONTH(rhivaFtra)<=@MONTH)

		INSERT INTO PlanillasRoberto (Nro,NombreCompleto,Ocupacion,CI,Expedido,Sexo,FechaIngreso,FechaSalida,HaberBasico,DiasTrabajados,
		SueldoBasico,BonoAntiguedad,OtrosIngresos,TotalGanado,AFP,NacSolidario,IVA,OtrosEgresos,TotalEgresos,LiquidoPagable,DiasTrabajadosBC,NroCta,SaldoCredFis,NivelSalarial,CPER)
		VALUES (@Nro,@NombreCompleto,@Ocupacion,@CI,@Expedido,@Sexo,@FechaIngreso,@FechaSalida,@HaberBasico,@DiasTrabajados,
		@SueldoBasico,@BonoAntiguedad,@OtrosIngresos,@TotalGanado,@AFP,@NacSolidario,@IVA,@OtrosEgresos,@TotalEgresos,@LiquidoPagable,@DiasTrabajadosBC,@NroCta,@SaldoCredFis,@NivelSalarial,@CPER)


		--TRAYENDO LAS TRANSACCIONES DE AFP
		DECLARE @nro_planilla_roberto as Integer
		SELECT @nro_planilla_roberto=Nro from PlanillasRoberto


		INSERT INTO AFPPlanilla (glosa,importe,nro_planilla_roberto)
		SELECT rhtrnglos,rhtrnImpt,@nro_planilla_roberto from rhtrn where rhtrnNemp=@CPER and YEAR(rhtrn.rhtrnFtra)=@YEAR and MONTH(rhtrn.rhtrnFtra)=@Month



		SET @Nro=@Nro+1
		FETCH NEXT FROM PersonasCursor INTO @CPER,@NombreCompleto,@Ocupacion,@CI,@Expedido,@Sexo,@FechaIngreso,@FechaSalida,@HaberBasico,@NroCta,@FechaRetiro,@NivelSalarial
	END

	CLOSE PersonasCursor
	DEALLOCATE PersonasCursor
	
	--select * from PlanillasRoberto;
END





go
create table phpTriggerPlanilla(
	id int not null primary key identity(1,1),
	cpry int,
	year int,
	month int,
	nombrePlanilla varchar(255)
);



go
create trigger llenarPlanillaRobertoTrigger 
ON phpTriggerPlanilla after insert 
as
begin

	SET NOCOUNT ON;
	
	DECLARE @CPRY as int 
	SELECT @CPRY= cpry from inserted
	DECLARE @MONTH as int
	SELECT @MONTH= month from inserted
	DECLARE @YEAR as int
	SELECT @YEAR= year from inserted

	DECLARE @nombrePlanilla as Varchar(255)
	SET @nombrePlanilla=(Select top 1 cgpryDesc from cgpry where cgpryPRYC=@CPRY)

	update phpTriggerPlanilla set nombrePlanilla=@nombrePlanilla where id=(select top 1 id from inserted)

	EXEC llenarPlanillaRoberto @CPRY,@YEAR,@MONTH
end
--drop trigger llenarPlanillaRobertoTrigger

--delete from planillasRoberto

go
insert into phpTriggerPlanilla (cpry,year,month,nombrePlanilla) values(3,2022,10,'PLANILLA');


select * from phpTriggerPlanilla
select * from AFPPlanilla

select * from PlanillasRoberto

--REGIMEN (BOLETA DE PAGO)
--	PERSONA TIENE UN REGIMEN
--		DE EL REGIMEN SE SACAN LAS AFP





/*
use PorongoGAM_Asistencia
select * from GAMPorongoCons.dbo.planillasRoberto
where CI not in (
select Persona.codigo from GAMPorongoCons.dbo.planillasRoberto,Persona
where Persona.codigo=PlanillasRoberto.CI)


update GAMPorongoCons.dbo.rhemp set rhempNhsa=0 where rhempNemp=(
select top 1 gbperCPER from GAMPorongoCons.dbo.gbper where gbperDide='9808196'
)



*/



/*
exec BuscaValorEnBBDD 'Concejal Presidenta'

select * from rhnvs

select * from gbper

select * from rhemp,rhnvs
where rhemp.rhempNsal=rhnvs.rhnvsCnvs

select * from rhemp

*/


--bonos y descuentos
select * from rhtmv

select * from rhdbi